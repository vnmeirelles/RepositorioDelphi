unit cAtribEntity;

interface

type
  TableName = class(TCustomAttribute)
  private
    FName: String;
    FTipo: String;
  public
    constructor Create(aName: String);
    property Name: String read FName write FName;
    property Tipo:  String read FTipo write FTipo;
  end;

type
  KeyField = class(TCustomAttribute)
  private
    FName: String;
    FTipo: String;
  public
    constructor Create(aName: String);
    property Name: String read FName write FName;
    property Tipo:  String read FTipo write FTipo;
  end;

type
  FieldName = class(TCustomAttribute)
  private
    FName: String;
    FTipo: String;
  public
    constructor Create(aName: String);
    property Name: String read FName write FName;
    property Tipo:  String read FTipo write FTipo;
  end;

type
  FieldType = class(TCustomAttribute)
  private
    FName: String;
    FTipo: String;
  public
    constructor Create(aName: String);
    property Name: String read FName write FName;
    property Tipo:  String read FTipo write FTipo;
  end;

implementation

constructor TableName.Create(aName: String);
begin
  FName := aName
end;

constructor KeyField.Create(aName: String);
begin
  FName := aName;
end;

constructor FieldName.Create(aName: String);
begin
  FName := aName;
end;

constructor FieldType.Create(aName: String);
begin
  FName := aName;
end;

end.
